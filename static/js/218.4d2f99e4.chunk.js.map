{"version":3,"file":"static/js/218.4d2f99e4.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/Contacts.List.styled.js","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectfilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return !filter\n      ? contacts\n      : contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n  }\n);\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  margin-top: 20px;\n`;\n\nexport const TitleFilter = styled.p`\n  font-size: 20px;\n`;\n\nexport const InputFilter = styled.input`\n  width: 250px;\n  height: 40px;\n  font-size: 25px;\n`;\n","import { selectFilter } from '../../redux/./contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/./contacts/filterSlice';\nimport { TitleFilter, InputFilter, FilterWrap } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <FilterWrap>\n      <TitleFilter>Find contacts by name</TitleFilter>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleFilterChange}\n      />\n    </FilterWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormWpap = styled.div`\n  margin-top: 60px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 40px;\n  font-size: 25px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-size: 15px;\n\n  flex-direction: column;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 35px;\n  appearance: none;\n  background-color: #2ea44f;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, 0.1) 0 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n\n  font-family: -apple-system, system-ui, 'Segoe UI', Helvetica, Arial,\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 20px;\n  padding: 6px 16px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 40px;\n  padding: 10px;\n`;\n\n// export const LoaderWrap = styled.span`\n//   display: inline-block;\n//   width: 25px;\n//   height: 25px;\n// `;\n\nexport const BtnNameWrap = styled.span`\n  display: inline-block;\n  width: 100px;\n  height: 25px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Filter } from '../Filter/Filter';\n\nimport toast from 'react-hot-toast';\n\nimport {\n  Form,\n  Input,\n  Label,\n  AddBtn,\n  Title,\n  FormWpap,\n  BtnNameWrap,\n} from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }))\n        .unwrap()\n        .then(() => {\n          event.target.reset();\n          toast.success('Contact is added!');\n        })\n        .catch(() => toast.error('Something went wrong...Try reload page'));\n    }\n  };\n\n  return (\n    <FormWpap>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <AddBtn type=\"submit\">\n          <BtnNameWrap>Add contact</BtnNameWrap>\n        </AddBtn>\n      </Form>\n      {contacts.length > 0 && <Filter />}\n    </FormWpap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrap = styled.div`\n  width: 420px;\n`;\n\nexport const ListOfContacts = styled.ul`\n  display: flex;\n  padding: 10px;\n\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ContactDetails = styled.p`\n  width: calc(100% / 3);\n  font-size: 16px;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  min-height: 35px;\n  min-width: 35px;\n  appearance: none;\n  background-color: salmon;\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, 0.1) 0 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n\n  font-family: -apple-system, system-ui, 'Segoe UI', Helvetica, Arial,\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  padding: 6px 16px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ContactsTitle = styled.h2`\n  margin: 0 auto;\n  font-size: 40px;\n  padding: 5px;\n`;\n\n// export const LoaderWrapDel = styled.span`\n//   display: inline-block;\n//   width: 25px;\n//   height: 25px;\n// `;\n\nexport const BtnNameWrapDel = styled.span`\n  display: inline-block;\n  min-width: 25px;\n  height: 25px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport toast from 'react-hot-toast';\n\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport {\n  Contact,\n  ContactDetails,\n  DeleteBtn,\n  BtnNameWrapDel,\n} from './Contacts.List.styled';\n\nexport const ContactItem = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => toast.success('Contact is deleted!'))\n      .catch(() => toast.error('Something went wrong...Try reload page'));\n  };\n\n  return (\n    <Contact>\n      <ContactDetails>{name}</ContactDetails>\n      <ContactDetails>{number}</ContactDetails>\n      <DeleteBtn type=\"button\" onClick={handleDelete}>\n        <BtnNameWrapDel>Delete</BtnNameWrapDel>\n      </DeleteBtn>\n    </Contact>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectfilteredContacts,\n} from 'redux/contacts/selectors';\nimport { ContactItem } from './ContactItem';\nimport {\n  ListOfContacts,\n  ContactsTitle,\n  ContactListWrap,\n} from './Contacts.List.styled';\n\nexport const ContactsList = ({ title }) => {\n  const contacts = useSelector(selectContacts);\n\n  const filteredContacts = useSelector(selectfilteredContacts);\n\n  return (\n    <ContactListWrap>\n      {contacts.length > 0 && (\n        <ListOfContacts>\n          <ContactsTitle>{title}</ContactsTitle>\n          {filteredContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))}\n        </ListOfContacts>\n      )}\n    </ContactListWrap>\n  );\n};\n\nContactsList.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {isLoading && !error && <Loader />}\n      <ContactsForm />\n      <ContactsList title=\"Contacts\" />\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectfilteredContacts","contact","toLowerCase","includes","FilterWrap","styled","TitleFilter","InputFilter","Filter","dispatch","useDispatch","filterValue","useSelector","type","pattern","title","required","onChange","event","setFilter","target","FormWpap","Form","Input","Label","AddBtn","Title","BtnNameWrap","ContactsForm","onSubmit","preventDefault","number","some","toast","addContact","unwrap","then","reset","catch","ContactListWrap","ListOfContacts","Contact","ContactDetails","DeleteBtn","ContactsTitle","BtnNameWrapDel","ContactItem","id","onClick","deleteContact","ContactsList","filteredContacts","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}